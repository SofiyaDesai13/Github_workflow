# Created for Study Purpose
-----
name: creation workflow
run: Onboarding new Tenant ${{ inputs.tenantName }}
on:
  workflow_dispatch:
    inputs:
      tenantId:
        description: 'new tenant Id'
        type: string
        required: true
      tenantName:
        description: 'new tenant Name'
        type: string
        required: true
      siteName:
        description: 'new tenant site location'
        type: string
        required: true
  #repository_dispatch:
  #   types: [ new_tenant ]
jobs:
  New Tenant Onboarding:
    runs_on: ubuntu_latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: get python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10' 
      
      - name: install pre-requisites
        run: |
          sudo apt install jq -y
          pip3 install pyyaml pygit2 PyGithub boto3 gitpython
          wget https://github.com/mozilla/sops/releases/download/v3.6.0/sops-v3.6.0.linux zops && chmod +x sops
          mv sops /usr/local/bin
      
      - name: checkout repository
        id: repo_clone
        run: |
          git clone https://$GITHUB_TOKEN@github.com/repository_url.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: running your own scripts
        run: |
          ./myrepos/scripts/creating.sh ${{ inputs.tenantId }} ${{ inputs.tenantName }} ${{ inputs.siteId }}
          python3 myrepos/scripts/genconfigs.py -b $config1 -c $config2
          sudo rm -rf clonedrepos
         env:
           config1: 'clonedrepos/config1.json'
           config2: 'clonedrepos/config2.json'
       
       - name: Create pull rewuest
         id: cpr
         uses: peter-evans/create-pull-request@v5
         with:
           token: ${{ secrets.GITHUB_TOKEN }}
           commit-message: ${{ inputs.tenantName }} new tenant
           title: "My New tenant ${{ inputs.tenantName }}"
           body: |
             Tenant_Name: `${{ inputs.tenantName }}`
             **Note:** Autogenerated PR!
           branch: new-PR-branch
           base: master
        
        - name: check outputs
          if: ${{ steps.cpr.outputs.pull-request-number }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            echo "Pull request number - ${{ steps.cpr.outputs.pull-request-number }}"
            echo "Pull request url - ${{ steps.cpr.outputs.pull-request-url }}"
            gh pr merge "${{ steps.cpr.outputs.pull-request-number }}" --auto --squash
        
 
